"""DanceWibHist generates histograms of Wiberg bond orders"""

import logging
from matplotlib import pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import numpy as np
from dancelib import dancerunbase


class DanceWibHist(dancerunbase.DanceRunBase):
    """
    DanceWibHist takes Wiberg bond orders from multiple CSV files and generates
    a PDF containing histograms of bond orders in each file and across all
    files.

    Attributes:
        _wiberg_csvs: a list of CSV files generated by DanceSaver (or in the
                          same format)
        _wiberg_csv_col: the column in the given CSV's holding the Wiberg bond
                      orders
        _output_histogram: the name of the PDF file to which to save the plots
        _histogram_file: the actual file object used to save the plots
        _bond_orders: a list of numpy arrays, where the array at index i holds
                      the bond orders in the file at index i of _wiberg_csvs
        _hist_min: minimum bin for histogram
        _hist_max: maximum bin for histogram
        _hist_step: step size for histogram bins
        _hist_bins: list of bins for the histogram, based on _hist_min,
                    _hist_max, and _hist_step
    """

    #
    # Public
    #

    def __init__(self, wiberg_csvs: [str], wiberg_csv_col: int,
                 output_histogram: str, hist_min: float, hist_max: float,
                 hist_step: float):
        """
        Initializes variables. Raises RuntimeError if the min is not less
        than the max, or if the step is 0 or less.
        """
        super().__init__()
        self._wiberg_csvs = wiberg_csvs
        self._wiberg_csv_col = wiberg_csv_col
        self._output_histogram = output_histogram
        self._histogram_file = PdfPages(self._output_histogram)
        self._bond_orders = []

        # Histogram variables
        if hist_min >= hist_max or hist_step <= 0:
            raise RuntimeError(f"Invalid histogram specifications: "
                               f"min({hist_min}), max({hist_max}), "
                               f"step({hist_step})")
        self._hist_min = hist_min
        self._hist_max = hist_max
        self._hist_step = hist_step
        self._hist_bins = np.arange(self._hist_min,
                                    self._hist_max + self._hist_step / 2,
                                    self._hist_step)

        plt.rcParams.update({'font.size': 6})

    def run(self):
        """Make all plots"""
        super().check_run_fatal()
        logging.info("STARTING HISTOGRAM PLOTTING")
        self._parse_wiberg()
        self._plot_histograms()
        self._histogram_file.close()
        logging.info(f"Saved plots to {self._output_histogram}")
        logging.info("FINISHED HISTOGRAM PLOTTING")

    #
    # Private
    #

    def _parse_wiberg(self):
        """Parse out wiberg bond orders from all the wiberg_csvs"""
        self._bond_orders = []
        for csvfile in self._wiberg_csvs:
            self._bond_orders.append(
                np.genfromtxt(
                    csvfile,
                    delimiter=",",
                    skip_header=1,
                    usecols=(self._wiberg_csv_col,)))

    def _plot_histograms(self):
        """Plot histograms of bond orders for each CSV and for all combined"""
        for csvfile, bond_orders in zip(self._wiberg_csvs, self._bond_orders):
            self._plot_one_histogram((f"Wiberg Bond Orders for Trivalent "
                                      f"Nitrogen Molecules in \n{csvfile}"),
                                     bond_orders)

        self._plot_one_histogram(("Wiberg Bond Orders Across all Trivalent "
                                  "Nitrogen Molecules"),
                                 np.concatenate(self._bond_orders))

    def _plot_one_histogram(self, title: str, bond_orders: np.array):
        fig, ax = plt.subplots()
        ax.set_title(title)
        ax.hist(bond_orders, bins=self._hist_bins)
        ax.set_xlim([self._hist_min, self._hist_max])
        ax.set_xticks(self._hist_bins)
        ax.set_xlabel("Wiberg Bond Order")
        ax.set_ylabel("Number of Molecules")
        fig.autofmt_xdate()
        self._histogram_file.savefig(fig)
