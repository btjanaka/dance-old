"""Provides a class for selecting a final set of molecules."""

import logging
from openeye import oechem
from dancelib import danceprops
from dancelib import dancerunbase


class DanceSelector(dancerunbase.DanceRunBase):
    """
    Selects molecules, typically from the set generated by DanceGenerator. Does
    this in several steps:

    Attributes:
        _mols: a list storing the molecules the class is currently handling
        _properties: a list storing properties of the molecules (see
                     danceprops.py for more info)
    """

    #
    # Public
    #

    def __init__(self, mols: [oechem.OEMol],
                 properties: [danceprops.DanceProperties]):
        super().__init__()
        self._mols = mols
        self._properties = properties

    def run(self):
        """Performs all the molecule selection"""
        super().check_run_fatal()
        logging.info("STARTING SELECTING")
        danceprops.clean_properties_list(self._mols, self._properties)
        logging.info("FINISHED SELECTING")

    def get_data(self) -> ([oechem.OEMol], [danceprops.DanceProperties]):
        """Return the molecules and properties associated with this class."""
        return self._mols, self._properties

    #
    # Private
    #
